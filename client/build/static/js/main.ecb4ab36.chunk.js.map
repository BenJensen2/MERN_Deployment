{"version":3,"sources":["views/List.jsx","views/New.jsx","views/Details.jsx","views/Edit.jsx","views/Exam.jsx","App.js","serviceWorker.js","index.js"],"names":["List","props","useState","pets","setPets","loaded","setLoaded","useEffect","getPets","sorted","petsList","sort","a","b","type","localeCompare","axios","get","then","res","console","log","data","catch","err","response","errors","className","to","Table","bordered","striped","map","pet","i","key","name","_id","New","setName","setType","description","setDescription","skill_1","setSkill_1","skill_2","setSkill_2","skill_3","setSkill_3","setErrors","createPet","e","preventDefault","newPet","skills","post","navigate","style","border","display","padding","onSubmit","color","properties","message","value","onChange","target","Button","Details","setPet","id","setPetskills","variant","onClick","delete","deletePet","undefined","updatePet","updatedPet","put","Exam","path","Edit","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ecb4ab36.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\n//Bootstrap\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\n\nconst List = (props) => {\n\n  const [pets, setPets] = useState()\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    getPets();\n  }, [])\n  \n  const sorted=(petsList)=>{\n    return petsList.sort((a, b) => a.type.localeCompare(b.type))    \n  }\n  const getPets = () => {\n    axios.get(\"http://localhost:8000/api/models\")\n      .then(res => {\n        console.log(res.data)\n        setPets(sorted(res.data))\n        setLoaded(true)\n        console.log(\"Sorted Pets\",sorted(res.data))\n      })\n      .catch(err => {\n        console.log(err.response.data.errors)\n      })\n  };\n\n  return (\n    <div>\n      <div className=\"Navbar\">\n        <h1>Pet Shelter</h1>\n        <p className=\"topLink\">\n          <Link to={\"/pets/new\"}>\n            add a pet to the shelter\n          </Link>\n        </p>\n      </div>\n      <h4>These pets are looking for a good home</h4>\n      <Table bordered striped>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {loaded &&\n              pets.map((pet,i) =>\n              <tr key={i}>\n                <td>{pet.name}</td>\n                <td>{pet.type}</td>\n                <td>\n                  <Link to={`/pets/${pet._id}`}>\n                    details\n                  </Link>\n                  <span> | </span>\n                  <Link to={`/pets/${pet._id}/edit`}>\n                    edit\n                  </Link>\n                </td>\n              </tr>\n              )\n            }\n          </tbody>\n        </Table>\n    </div>\n  )\n}\n\nexport default List;","import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios'\n//Bootstrap\nimport Button from 'react-bootstrap/Button';\n\nconst New = (props) => {\n  // STATE DATA\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skill_1, setSkill_1] = useState(\"\");\n  const [skill_2, setSkill_2] = useState(\"\");\n  const [skill_3, setSkill_3] = useState(\"\");\n  const [errors, setErrors] = useState(\"\")\n\n  // HANDLERS\n  const nameHandler = (e) => {\n    setName(e.target.value)\n  }\n  const typeHandler = (e) => {\n    setType(e.target.value)\n  }\n  const descriptionHandler = (e) => {\n    setDescription(e.target.value)\n  }\n  const skill_1Handler = (e) => {\n    setSkill_1(e.target.value)\n  }\n  const skill_2Handler = (e) => {\n    setSkill_2(e.target.value)\n  }\n  const skill_3Handler = (e) => {\n    setSkill_3(e.target.value)\n  }\n\n  const formStyle = {\n    border: \"solid 1px black\",\n    display: \"inline-block\",\n    padding: \"10px\"\n  }\n\n  const formHandler = (e) => {\n    createPet(e)\n  }\n\n  const createPet = (e) => {\n    e.preventDefault()\n    console.log(\"New Pet\")\n    var newPet = {\n      name: name,\n      type: type,\n      description: description,\n      skills: {\n        skill_1: skill_1,\n        skill_2: skill_2,\n        skill_3: skill_3\n      }\n    };\n    axios.post(\"http://localhost:8000/api/model/new\", newPet)\n      .then(res => {\n        console.log(res.data)\n        navigate(\"/\")\n      })\n      // ,then()\n      .catch(err => {\n        console.log(\"Error\",\n          err.response.data.errors)\n        setErrors(err.response)\n      })\n  }\n\n  // console.log(\"setErrors\", errors)\n  \n  return (\n    <div >\n      <div className=\"Navbar\">\n        <h1>Pet Shelter</h1>\n        <p className=\"topLink\">\n          <Link to={\"/\"}>\n            back to home\n          </Link>\n        </p>\n      </div>\n      <h4>Know a pet needing a home?</h4>\n\n      <form style={formStyle} onSubmit={formHandler}>\n        <div>\n          <label>Pet Name:\n            {errors?.data?.errors?.name &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.name.properties.message}</span>\n            }\n          </label>\n          <input type=\"text\" value={name} onChange={nameHandler} />\n        </div>\n\n        <div>\n          <label>Pet Type:\n            {errors?.data?.errors?.type &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.type.properties.message}</span>\n            }\n          </label>\n          <input type=\"text\" value={type} onChange={typeHandler} />\n        </div>\n\n        <div>\n          <label>Pet Description:\n          {errors?.data?.errors?.description &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.description.properties.message}</span>\n            }\n          </label>\n          <input type=\"text\" value={description} onChange={descriptionHandler} />\n        </div>\n\n        <div>\n          <label>Skill 1:\n          {/* {errors?.data?.errors?.skills.skill_1 &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.skills.skill_1.properties.message}</span>\n            } */}\n          </label>\n          <input type=\"text\" value={skill_1} onChange={skill_1Handler} />\n        </div>\n\n        <div>\n          <label>Skill 1:\n          {/* {errors?.data?.errors?.skills.skill_2 &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.skills.skill_2.properties.message}</span>\n            } */}\n          </label>\n          <input type=\"text\" value={skill_2} onChange={skill_2Handler} />\n        </div>\n\n        <div>\n          <label>Skill 1:\n          {/* {errors?.data?.errors?.skills.skill_3 &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.skills.skill_3.properties.message}</span>\n            } */}\n          </label>\n          <input type=\"text\" value={skill_3} onChange={skill_3Handler} />\n        </div>\n        <Button\n          type=\"submit\"\n          value=\"Submit\">\n          Add Pet\n          </Button>\n      </form>\n    </div>\n  )\n}\n\nexport default New;","import React, { useState, useEffect } from 'react';\nimport { Link,navigate } from '@reach/router';\nimport axios from 'axios';\n//Bootstrap\nimport Button from 'react-bootstrap/Button';\n\nconst Details = ({pet,setPet,pets,setPets,id}) => {\n\n  const [name, setName] = useState(\"\");\n  const [petskills, setPetskills] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [errors, setErrors] = useState(\"\")\n\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/api/model/${id}`)\n      .then(res => {\n        console.log(res.data)\n        setPet(res.data)\n        setPetskills(res.data.skills)\n        setName(res.data.name)\n        setLoaded(true);\n      })\n      .catch(err => {\n        console.log(\"Not Found Error\", err.response)\n        setErrors(err.response)\n      })\n  }, [])\n\n  const divStyle = {\n    border: \"solid 1px black\",\n    display: \"inline-block\",\n    padding: \"10px\"\n  }\n\n  // console.log(pet.skills)\n\n  const deletePet = (id) => {\n    console.log(\"Delete Handler\", id)\n    axios.delete(`http://localhost:8000/api/model/${id}`)\n    .then(res => {\n      console.log(res.data)\n      console.log(\"Pet id to filter\",pet._id)\n      // setPets(pets.filter((pet) => pet._id !== id));\n      navigate(\"/\")\n    })\n    // .then()\n    .catch(err => {\n      console.log(err.response)\n    })\n  }\n  \n  console.log(\"New list of pets\",pets)\n  return (\n    <div>\n      <div className=\"Navbar\">\n        <h1>Pet Shelter</h1>\n        <p className=\"topLink\">\n          <Link to={\"/\"}>\n            back to home\n          </Link>\n        </p>\n      </div>\n      {loaded &&\n        <h4>Details about: {pet.name}</h4>\n      }\n        <p>\n          <Button \n            variant=\"danger\"\n            onClick={()=>deletePet(pet._id)}>\n              Adopt {pet.name}\n          </Button>\n        </p>\n      {loaded &&\n        <div style={divStyle}>\n          <div>\n            <label>Pet Type:</label>\n            <output>{pet.type}</output>\n          </div>\n          <div>\n            <label>Description:</label>\n            <output>{pet.description}</output>\n          </div>\n          {pet.skills !== undefined &&\n            <div>\n              <label>Skills:</label>\n              <ul>\n                {pet.skills.skill_1 !== undefined &&\n                  <li>{pet.skills.skill_1}</li>\n                }\n                {pet.skills.skill_2 !== undefined &&\n                  <li>{pet.skills.skill_2}</li>\n                }\n                {pet.skills.skill_3 !== undefined &&\n                  <li>{pet.skills.skill_3}</li>\n                }\n              </ul>\n            </div>\n          }\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Details;","import React, { useState, useEffect} from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios'\n//Bootstrap\nimport Button from 'react-bootstrap/Button';\n\nconst New = ({id}) => {\n  // STATE DATA\n  const [pet, setPet] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [petskills, setPetskills] = useState(\"\");\n  const [skill_1, setSkill_1] = useState(\"\");\n  const [skill_2, setSkill_2] = useState(\"\");\n  const [skill_3, setSkill_3] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [errors, setErrors] = useState(\"\")\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/api/model/${id}`)\n      .then(res => {\n        console.log(res.data)\n        setPet(res.data)\n        setName(res.data.name)\n        setType(res.data.type)\n        setDescription(res.data.description)\n        setSkill_1(res.data.skills.skill_1)\n        setSkill_2(res.data.skills.skill_2)\n        setSkill_3(res.data.skills.skill_3)\n        setPetskills(res.data.skills)\n        setLoaded(true);\n      })\n      .catch(err => {\n        console.log(\"Not Found Error\", err.response.data.message)\n        setErrors(err.response.data.message)\n      })\n  }, [])\n\n  // HANDLERS\n  const nameHandler = (e) => {\n    setName(e.target.value)\n  }\n  const typeHandler = (e) => {\n    setType(e.target.value)\n  }\n  const descriptionHandler = (e) => {\n    setDescription(e.target.value)\n  }\n  const skill_1Handler = (e) => {\n    setSkill_1(e.target.value)\n  }\n  const skill_2Handler = (e) => {\n    setSkill_2(e.target.value)\n  }\n  const skill_3Handler = (e) => {\n    setSkill_3(e.target.value)\n  }\n\n  const formStyle = {\n    border: \"solid 1px black\",\n    display: \"inline-block\",\n    padding: \"10px\"\n  }\n\n  const formHandler = (e) => {\n    updatePet(e)\n  }\n\n  const updatePet = (e) => {\n    e.preventDefault()\n    console.log(\"Updated Pet\")\n    var updatedPet = {\n      name: name,\n      type: type,\n      description: description,\n      skills: {\n        skill_1: skill_1,\n        skill_2: skill_2,\n        skill_3: skill_3\n      }\n    };\n    axios.put(`http://localhost:8000/api/model/update/${id}`, updatedPet)\n      .then(res => {\n        console.log(res.data)\n        setErrors(\"\")\n      })\n      .catch(err => {\n        console.log(\"Error\",\n          err.response.data.errors)\n        setErrors(err.response)\n      })\n  }\n\n  // console.log(\"setErrors\", errors)\n  \n  return (\n    <div>\n      <div className=\"Navbar\">\n        <h1>Pet Shelter</h1>\n        <p className=\"topLink\">\n          <Link to={\"/\"}>\n            back to home\n          </Link>\n        </p>\n      </div>\n      <h4>Edit </h4>\n\n      <form style={formStyle} onSubmit={formHandler}>\n        <div>\n          <label>Pet Name:\n            {errors?.data?.errors?.name &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.name.properties.message}</span>\n            }\n          </label>\n          <input type=\"text\" value={name} onChange={nameHandler} />\n        </div>\n\n        <div>\n          <label>Pet Type:\n            {errors?.data?.errors?.type &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.type.properties.message}</span>\n            }\n          </label>\n          <input type=\"text\" value={type} onChange={typeHandler} />\n        </div>\n\n        <div>\n          <label>Pet Description:\n          {errors?.data?.errors?.description &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.description.properties.message}</span>\n            }\n          </label>\n          <input type=\"text\" value={description} onChange={descriptionHandler} />\n        </div>\n\n        <div>\n          <label>Skill 1:\n          {/* {errors?.data?.errors?.skills.skill_1 &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.skills.skill_1.properties.message}</span>\n            } */}\n          </label>\n          <input type=\"text\" value={skill_1} onChange={skill_1Handler} />\n        </div>\n\n        <div>\n          <label>Skill 1:\n          {/* {errors?.data?.errors?.skills.skill_2 &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.skills.skill_2.properties.message}</span>\n            } */}\n          </label>\n          <input type=\"text\" value={skill_2} onChange={skill_2Handler} />\n        </div>\n\n        <div>\n          <label>Skill 1:\n          {/* {errors?.data?.errors?.skills.skill_3 &&\n              <span style={{ color: \"red\" }}> {errors.data.errors.skills.skill_3.properties.message}</span>\n            } */}\n          </label>\n          <input type=\"text\" value={skill_3} onChange={skill_3Handler} />\n        </div>\n        <Button\n          type=\"submit\"\n          value=\"Submit\">\n          Add Pet\n          </Button>\n      </form>\n    </div>\n  )\n}\n\nexport default New;","import React, { useState} from 'react';\nimport { Router } from '@reach/router';\nimport List from './List';\nimport New from './New';\nimport Details from './Details';\nimport Edit from './Edit';\n//Bootstrap\nimport Button from 'react-bootstrap/Button';\n\nconst Exam = (props) => {\n\n  const [pet, setPet] = useState({\n    name:\"\",\n    type:\"\",\n    description: \"\",\n    skills:{\n        skill_1:\"\",\n        skill_2:\"\",\n        skill_3:\"\"\n    }\n})\nconst [pets, setPets] = useState([])\n\n  return (\n    <div>\n      <Router>\n        <List\n          path=\"/\"\n        />\n        <New\n          pet={pet}\n          setPet={setPet}\n          path=\"/pets/new\"\n        />\n        <Details\n          pet={pet}\n          setPet={setPet}\n          pets={pets}\n          setPets={setPets}\n          path=\"/pets/:id\"\n        />\n        <Edit\n          pet={pet}\n          setPet={setPet}\n          pets={pets}\n          setPets={setPets}\n          path=\"/pets/:id/edit\"\n          />\n      </Router>\n    </div>\n  )\n}\n\nexport default Exam;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Exam from './views/Exam'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Exam/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}